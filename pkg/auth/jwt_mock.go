// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sankethkini/NewsLetter-Backend/pkg/auth (interfaces: JWTManager)

// Package auth is a generated GoMock package.
package auth

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	enum "github.com/sankethkini/NewsLetter-Backend/internal/enum"
)

// MockJWTManager is a mock of JWTManager interface.
type MockJWTManager struct {
	ctrl     *gomock.Controller
	recorder *MockJWTManagerMockRecorder
}

// MockJWTManagerMockRecorder is the mock recorder for MockJWTManager.
type MockJWTManagerMockRecorder struct {
	mock *MockJWTManager
}

// NewMockJWTManager creates a new mock instance.
func NewMockJWTManager(ctrl *gomock.Controller) *MockJWTManager {
	mock := &MockJWTManager{ctrl: ctrl}
	mock.recorder = &MockJWTManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJWTManager) EXPECT() *MockJWTManagerMockRecorder {
	return m.recorder
}

// Generator mocks base method.
func (m *MockJWTManager) Generator(arg0 string, arg1 enum.Access) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generator", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generator indicates an expected call of Generator.
func (mr *MockJWTManagerMockRecorder) Generator(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generator", reflect.TypeOf((*MockJWTManager)(nil).Generator), arg0, arg1)
}

// Validate mocks base method.
func (m *MockJWTManager) Validate(arg0 string) (*UserClaims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", arg0)
	ret0, _ := ret[0].(*UserClaims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Validate indicates an expected call of Validate.
func (mr *MockJWTManagerMockRecorder) Validate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockJWTManager)(nil).Validate), arg0)
}
